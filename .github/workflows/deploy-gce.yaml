name: Deploy GCE Service

on:
  workflow_call:
    inputs:
      env_name:
        required: true
        type: string
      env_string:
        required: true
        type: string
      working_directory:
        type: string
        default: "."
    secrets:
      PGP_SECRET_SIGNING_PASSPHRASE:
        required: true
      GCE_INSTANCE:
        required: true
      GCE_INSTANCE_ZONE:
        required: true
      GCE_PROJECT:
        required: true

jobs:
  setup-build-publish-deploy:
    runs-on: ubuntu-latest
    name: Setup, Build, Publish, and Deploy
    environment: "${{ inputs.env_name }}"
    env:
      # Env specific
      GCE_INSTANCE: "${{ secrets.GCE_INSTANCE }}"
      GCE_INSTANCE_ZONE: "${{ secrets.GCE_INSTANCE_ZONE }}"
      GCE_PROJECT: "${{ secrets.GCE_PROJECT }}"
      # Org specific
      PGP_SECRET_SIGNING_PASSPHRASE: ${{ secrets.PGP_SECRET_SIGNING_PASSPHRASE }}

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Alternative option - authentication via credentials json
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCE_CREDENTIALS }}"

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      - id: "build_env"
        name: "Make .env"
        run: |
          FILE="${{ inputs.working_directory }}/.env"
          touch $FILE
          ENV_STRING=$(gpg --decrypt --quiet --batch --passphrase "$PGP_SECRET_SIGNING_PASSPHRASE" --output - <(echo "${{ inputs.env_string }}" | base64 --decode))
          echo "$ENV_STRING" >> $FILE

      # Build the Docker image
      - name: Build
        run: |-
          docker build --tag "gcr.io/$GCE_PROJECT/$GCE_INSTANCE-image:$GITHUB_SHA" .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$GCE_PROJECT/$GCE_INSTANCE-image:$GITHUB_SHA"
      - name: Deploy
        run: |-
          gcloud compute instances update-container "$GCE_INSTANCE" \
            --zone "$GCE_INSTANCE_ZONE" \
            --container-image "gcr.io/$GCE_PROJECT/$GCE_INSTANCE-image:$GITHUB_SHA"
