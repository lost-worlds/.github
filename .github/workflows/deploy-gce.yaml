name: Deploy GCE Instance

on:
  workflow_call:
    inputs:
      env_name:
        required: true
        type: string
      env_string:
        required: true
        type: string
      working_directory:
        type: string
        default: "."
      GCE_INSTANCE:
        required: true
        type: string
      GCE_INSTANCE_ZONE:
        required: true
        type: string
    secrets:
      PGP_SECRET_SIGNING_PASSPHRASE:
        required: true
      GH_REGISTRY_PAT:
        required: true
      GCE_CREDENTIALS:
        required: true

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: "${{ inputs.env_name }}"
    env:
      ## Secrets

      # Organizational
      PGP_SECRET_SIGNING_PASSPHRASE: ${{ secrets.PGP_SECRET_SIGNING_PASSPHRASE }}
      GH_REGISTRY_PAT: ${{ secrets.GH_REGISTRY_PAT }}

      ## Vars

      # Environmental
      GCE_PROJECT: "${{ vars.GCE_PROJECT }}"

      # Inputs
      GCE_INSTANCE: "${{ inputs.GCE_INSTANCE }}"
      GCE_INSTANCE_ZONE: "${{ inputs.GCE_INSTANCE_ZONE }}"

    defaults:
      run:
        working-directory: "${{ inputs.working_directory }}"

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - id: "checkout"
        name: Checkout
        uses: actions/checkout@v3

      # Authentication via credentials json
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCE_CREDENTIALS }}"

      # Setup gcloud CLI
      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v1

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - name: "Configure Docker"
        run: |-
          gcloud --quiet auth configure-docker

      # Build the .env file
      - id: "build_env"
        name: "Build .env"
        run: |
          FILE="./.env"
          touch $FILE
          ENV_STRING=$(gpg --decrypt --quiet --batch --passphrase "$PGP_SECRET_SIGNING_PASSPHRASE" --output - <(echo "${{ inputs.env_string }}" | base64 --decode))
          echo "$ENV_STRING" >> $FILE

      # Build the Docker image
      - id: "build"
        name: "Build"
        run: |-
          docker build --build-arg GH_REGISTRY_PAT=${GH_REGISTRY_PAT} --build-arg PORT=8080 --tag "gcr.io/$GCE_PROJECT/$GCE_INSTANCE-image:$GITHUB_SHA" .

      # Push the Docker image to Google Container Registry
      - id: "publish"
        name: "Publish"
        run: |-
          docker push "gcr.io/$GCE_PROJECT/$GCE_INSTANCE-image:$GITHUB_SHA"

      # Deploy the new container by updating the GCE Instance
      - id: "deploy"
        name: "Deploy"
        run: |-
          gcloud compute instances update-container "$GCE_INSTANCE" \
            --zone "$GCE_INSTANCE_ZONE" \
            --container-image "gcr.io/$GCE_PROJECT/$GCE_INSTANCE-image:$GITHUB_SHA"
