name: Deploy GAE Service

on:
  workflow_call:
    inputs:
      env_name:
        required: true
        type: string
      env_string:
        required: false
        type: string
      working_directory:
        type: string
        default: "."
    secrets:
      PGP_SECRET_SIGNING_PASSPHRASE:
        required: true
      GH_REGISTRY_PAT:
        required: true
      GAE_CREDENTIALS:
        required: true

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.env_name }}
    env:
      ## Secrets

      # Organizational
      PGP_SECRET_SIGNING_PASSPHRASE: ${{ secrets.PGP_SECRET_SIGNING_PASSPHRASE }}
      GH_REGISTRY_PAT: ${{ secrets.GH_REGISTRY_PAT }}

    steps:
      - id: "checkout"
        name: Checkout
        uses: actions/checkout@v3

      - id: "build"
        name: "Build"
        run: |-
          cd "${{ inputs.working_directory }}"
          npm config set @lost-worlds:registry=https://npm.pkg.github.com
          npm config set //npm.pkg.github.com/:_authToken "$GH_REGISTRY_PAT"
          yarn
          yarn build

      - id: "build_env"
        name: "Make .env"
        run: |
          FILE="${{ inputs.working_directory }}/.env"
          touch $FILE
          ENV_STRING=$(gpg --decrypt --quiet --batch --passphrase "$PGP_SECRET_SIGNING_PASSPHRASE" --output - <(echo "${{ inputs.env_string }}" | base64 --decode))
          echo "$ENV_STRING" >> $FILE
          NPMRC="${{ inputs.working_directory }}/.npmrc"
          touch $NPMRC
          echo "@lost-worlds:registry=https://npm.pkg.github.com" >> $NPMRC
          echo "//npm.pkg.github.com/:_authToken=$GH_REGISTRY_PAT" >> $NPMRC
          cat $NPMRC

      - id: "auth"
        name: "Authentication"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GAE_CREDENTIALS }}"

      - id: "deploy"
        name: "Deploy GAE Instance"
        run: |
          gcloud app deploy "${{ inputs.working_directory }}"

      - id: "output"
        name: "Deployed URL"
        run: 'echo "The application has been deployed at: "${{ steps.deploy.outputs.url }}"'