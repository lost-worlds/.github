name: Deploy Cloud Function

on:
  workflow_call:
    inputs:
      directory:
        required: true
        type: string
      function:
        required: true
        type: string
      env_name:
        required: true
        type: string
      env_string:
        required: false
        default: ""
        type: string
    secrets:
      PGP_SECRET_SIGNING_PASSPHRASE:
        required: true
      CLOUD_FUNCTIONS_CREDENTIALS:
        required: true

jobs:
  deploy:
    runs-on: "ubuntu-latest"
    environment: "${{ inputs.env_name }}"
    env:
      # Org specific
      PGP_SECRET_SIGNING_PASSPHRASE: ${{ secrets.PGP_SECRET_SIGNING_PASSPHRASE }}
    defaults:
      run:
        working-directory: "${{ inputs.directory }}/${{ inputs.function }}"

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - uses: "actions/checkout@v3"

      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.CLOUD_FUNCTIONS_CREDENTIALS }}"

      - id: "build_env"
        name: "Make .env"
        run: |
          FILE="./.env"
          touch $FILE
          ENV_STRING=$(gpg --decrypt --quiet --batch --passphrase "$PGP_SECRET_SIGNING_PASSPHRASE" --output - <(echo "${{ inputs.env_string }}" | base64 --decode))
          echo "$ENV_STRING" >> $FILE

      - id: "build"
        name: "Build"
        run: |-
          yarn
          yarn build

      - id: "deploy"
        uses: "google-github-actions/deploy-cloud-functions@v1"
        with:
          name: "${{ inputs.function }}"
          runtime: "nodejs16"
          source_dir: "${{ inputs.directory }}/${{ inputs.function }}"
          entry_point: "${{ inputs.function }}"

      # Example of using the output
      - id: "test"
        run: |-
          echo "${{ steps.deploy.outputs.url }}"
